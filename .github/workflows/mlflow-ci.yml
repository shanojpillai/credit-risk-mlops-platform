name: MLflow MLOps CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mlflow xgboost lightgbm pytest pytest-cov
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=src/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  mlflow-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mlflow pandas scikit-learn
    
    - name: Start MLflow server
      run: |
        mlflow server --host 127.0.0.1 --port 5000 &
        sleep 10
    
    - name: Test MLflow setup
      run: |
        python scripts/setup_mlflow.py
    
    - name: Run sample experiment
      run: |
        python -c "
        import mlflow
        mlflow.set_tracking_uri('http://127.0.0.1:5000')
        with mlflow.start_run():
            mlflow.log_param('test', 'ci-cd')
            mlflow.log_metric('accuracy', 0.95)
        print('✅ MLflow test passed!')
        "

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build MLflow server image
      run: |
        echo "FROM python:3.9-slim
        RUN pip install mlflow
        EXPOSE 5000
        CMD ['mlflow', 'server', '--host', '0.0.0.0']" > Dockerfile.test
        docker build -f Dockerfile.test -t mlflow-test .
    
    - name: Test Docker image
      run: |
        docker run -d -p 5000:5000 mlflow-test
        sleep 10
        curl -f http://localhost:5000 || exit 1
        echo "✅ Docker build test passed!"
